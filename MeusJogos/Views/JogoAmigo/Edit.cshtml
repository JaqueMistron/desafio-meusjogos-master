@model MeusJogos.Models.JogoAmigoViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var dataDevolucao = Model.DataDevolucao.HasValue ? Model.DataDevolucao.Value.ToString("yyyy-MM-dd") : "";
    var dataRetirada = Model.DataRetirada.ToString("yyyy-MM-dd");
}

<h2>Alterar empréstimo</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.IdJogoAnterior)
    @Html.HiddenFor(x => x.IdAmigo)

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IdAmigo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.IdAmigo, (IEnumerable<SelectListItem>)ViewBag.DropDownAmigos, new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.IdAmigo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IdJogo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.IdJogo, (IEnumerable<SelectListItem>)ViewBag.DropDownJogos, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdJogo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataRetirada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataRetirada, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataRetirada, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DataDevolucao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataDevolucao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataDevolucao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var model = {
            dataRetirada: '@dataRetirada',
            dataDevolucao: '@dataDevolucao'
        };

        $(function () {
            $("#DataRetirada").val(window.model.dataRetirada);
            $("#DataDevolucao").val(window.model.dataDevolucao);
        });
    </script>
}


